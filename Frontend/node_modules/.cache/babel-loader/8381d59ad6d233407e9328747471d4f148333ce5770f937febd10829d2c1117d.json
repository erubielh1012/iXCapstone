{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    console.log(\"Trying to grab all Blogs\");\n    const data = await fetch(\"https://localhost:8000/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst getBlogById = async id => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\"https://localhost:8000/api/blogs/\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogsByCategoryId = async categoryId => {\n  try {\n    console.log(\"Trying to grab filtered blogs by cats ID\");\n    const data = await fetch(\"https://localhost:8000/api/blogs/category/\" + categoryId, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogService = {\n  getBlogs,\n  blogsByCategoryId\n};\nconst updateBlogById = async id => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\"https://localhost:8000/api/blogs/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst deleteBlogById = async id => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\"https://localhost:8000/api/blogs/\" + id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","console","log","data","fetch","method","headers","blogsApiData","json","message","error","Error","getBlogById","id","blogsByCategoryId","categoryId","blogService","updateBlogById","deleteBlogById"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/BlogApp/Frontend/src/services/blogService.js"],"sourcesContent":["\n\nconst getBlogs = async () => {\n  try {\n    console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\n      \"https://localhost:8000/api/blogs\",\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst getBlogById = async (id) => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\n      \"https://localhost:8000/api/blogs/\" + id,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nconst blogsByCategoryId = async ( categoryId ) => {\n  try {\n    console.log(\"Trying to grab filtered blogs by cats ID\")\n\n    const data = await fetch(\n      (\"https://localhost:8000/api/blogs/category/\" + categoryId),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n    const blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch(error) {\n    throw new Error(error);\n  }\n}\n  \n  const blogService = {\n    getBlogs, blogsByCategoryId\n  };\n\nconst updateBlogById = async (id) => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\n      \"https://localhost:8000/api/blogs/\" + id,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nconst deleteBlogById = async (id) => {\n  try {\n    // console.log(\"Trying to grab all Blogs\")\n    const data = await fetch(\n      \"https://localhost:8000/api/blogs/\" + id,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      \n    let blogsApiData = await data.json();\n    console.log(blogsApiData.message);\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n  \n  export default blogService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}