{"ast":null,"code":"const register = async userData => {\n  const response = await fetch(\"http://localhost:8000/api/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res;\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst login = async userData => {\n  const response = await fetch(\"http://localhost:8000/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n};\nconst getAuthorInfo = async id => {\n  const data = await fetch(\"http://localhost:8000/api/auth/\" + id, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!data.ok) {\n    try {\n      let authorData = await data.json();\n      throw authorData.message || console.log(authorData);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const authorData = await data.json();\n  return authorData;\n};\nconst getUser = async authorId => {\n  const response = await fetch(`http://localhost:8000/api/auth/user/${authorId}`);\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(`http://localhost:8000/api/auth/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      // \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: userData\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst authService = {\n  getAuthorInfo,\n  register,\n  login,\n  getUser,\n  updateUser,\n  updateUser\n};\nexport default authService;","map":{"version":3,"names":["register","userData","response","fetch","method","headers","body","JSON","stringify","ok","res","json","err","error","Error","responseData","localStorage","setItem","data","login","getAuthorInfo","id","authorData","message","console","log","getUser","authorId","updateUser","userId","Authorization","parse","getItem","token","authService"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/services/authService.js"],"sourcesContent":["const register = async (userData) => {\n  const response = await fetch(\n    \"http://localhost:8000/api/auth/register\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      try {\n        let res = await response.json();\n        throw res;\n      } catch (err) {\n        const error = new Error(\"Something went wrong\");\n        throw new Error(error);\n      }\n    }\n\n    const responseData = await response.json();\n    localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n    return responseData;\n};\n\nconst login = async (userData) => {\n  const response = await fetch(\"http://localhost:8000/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n}\n\nconst getAuthorInfo = async (id) => {\n    const data = await fetch(\n        \"http://localhost:8000/api/auth/\" + id,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n    \n      if (!data.ok) {\n        try {\n          let authorData = await data.json();\n          throw authorData.message || console.log(authorData);\n        } catch (err) {\n          const error = new Error(\"Something went wrong\")\n          throw new Error(error);\n        }\n      }\n      \n      const authorData = await data.json();\n      return authorData;\n};\n\nconst getUser = async (authorId) => {\n  const response = await fetch(\n    `http://localhost:8000/api/auth/user/${authorId}`\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst updateUser = async (userId, userData) => {\n  const response = await fetch(\n    `http://localhost:8000/api/auth/user/${userId}`,\n    {\n      method: \"PUT\",\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n      },\n      body: userData,\n    }\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst authService = {\n  getAuthorInfo,\n  register,\n  login,\n  getUser,\n  updateUser,\n  updateUser,\n};\n\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}