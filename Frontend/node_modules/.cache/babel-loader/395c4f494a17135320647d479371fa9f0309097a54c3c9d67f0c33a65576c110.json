{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport categoryService from \"../services/categoryService\";\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCat: null,\n  categories: [],\n  category: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const fetchCategories = createAsyncThunk(\"categories/fetchCategories\", async (_, thunkAPI) => {\n  try {\n    return await categoryService.fetchCategories();\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCategory = createAsyncThunk(\"categories/updateCategory\", async (category, thunkAPI) => {\n  try {\n    return await categoryService.updateCategory(category);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const createCategory = createAsyncThunk(\"categories/createCategory\", async (categoryId, thunkAPI) => {\n  try {\n    return await categoryService.createCategory(categoryId);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const deleteCategory = createAsyncThunk(\"categories/deletedCategory\", async (categoryId, thunkAPI) => {\n  try {\n    return await categoryService.deleteCategory(categoryId);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    resetSuccessAndError: state => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n    setEditCategory: (state, {\n      payload\n    }) => {\n      state.editCategory = payload;\n      state.addCategory = null;\n      state.deleteCat = null;\n    },\n    setAddCategory: (state, {\n      payload\n    }) => {\n      state.editCategory = null;\n      state.addCategory = payload;\n      state.deleteCat = null;\n    },\n    setDeleteCategory: (state, {\n      payload\n    }) => {\n      state.editCategory = null;\n      state.addCategory = null;\n      state.deleteCat = payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchCategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories = payload.data;\n      state.isSuccess = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(fetchCategories.rejected, (state, {\n      payload\n    }) => {\n      state.message = payload;\n      state.isError = true;\n      state.isLoading = false;\n    }).addCase(createCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(createCategory.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories.push(payload.data);\n      state.addCategory = null;\n      state.isSuccess = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(createCategory.rejected, (state, {\n      payload\n    }) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(updateCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateCategory.fulfilled, (state, {\n      payload\n    }) => {\n      const index = state.categories.findIndex(x => x.id === payload.data.id);\n      state.categories = state.categories.filter(x => x.id !== payload.data.id);\n      ;\n      state.categories.splice(index, 0, payload.data);\n      state.editCategory = null;\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(updateCategory.rejected, (state, {\n      payload\n    }) => {\n      // state.editCategory = null;\n      state.isError = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(deleteCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteCategory.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories = state.categories.map(x => x.id !== payload.data.id);\n      ;\n      state.deleteCat = null;\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(deleteCategory.rejected, (state, {\n      payload\n    }) => {\n      // state.editCategory = null;\n      state.isError = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    });\n  }\n});\nexport const {\n  reset,\n  resetSuccessAndError,\n  setEditCategory,\n  setAddCategory,\n  setDeleteCategory\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoryService","initialState","addCategory","editCategory","deleteCat","categories","category","isError","isSuccess","isLoading","message","fetchCategories","_","thunkAPI","error","rejectWithValue","updateCategory","createCategory","categoryId","deleteCategory","categoriesSlice","name","reducers","reset","state","resetSuccessAndError","setEditCategory","payload","setAddCategory","setDeleteCategory","extraReducers","builder","addCase","pending","fulfilled","data","rejected","push","index","findIndex","x","id","filter","splice","map","actions","reducer"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/features/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport categoryService from \"../services/categoryService\";\n\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCat: null,\n  categories: [],\n  category: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const fetchCategories = createAsyncThunk(\n  \"categories/fetchCategories\",\n  async (_, thunkAPI) => {\n    try {\n      return await categoryService.fetchCategories();\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const updateCategory = createAsyncThunk(\n  \"categories/updateCategory\",\n  async(category, thunkAPI) => {\n    try {\n      return await categoryService.updateCategory(category);\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const createCategory = createAsyncThunk(\n  \"categories/createCategory\",\n  async(categoryId, thunkAPI) => {\n    try {\n      return await categoryService.createCategory(categoryId);\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const deleteCategory = createAsyncThunk(\n  \"categories/deletedCategory\",\n  async(categoryId, thunkAPI) => {\n    try {\n      return await categoryService.deleteCategory(categoryId);\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI. rejectWithValue(message);\n    }\n  }\n);\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    resetSuccessAndError: (state) => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n    setEditCategory: (state, {payload}) => {\n      state.editCategory = payload;\n      state.addCategory = null;\n      state.deleteCat = null;\n    },\n    setAddCategory: (state, {payload}) => {\n      state.editCategory = null;\n      state.addCategory = payload;\n      state.deleteCat = null;\n    },\n    setDeleteCategory: (state, {payload}) => {\n      state.editCategory = null;\n      state.addCategory = null;\n      state.deleteCat = payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCategories.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchCategories.fulfilled, (state, { payload }) => {\n        state.categories = payload.data;\n        state.isSuccess = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(fetchCategories.rejected, (state, { payload }) => {\n        state.message = payload;\n        state.isError = true;\n        state.isLoading = false;\n      })\n      .addCase(createCategory.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(createCategory.fulfilled, (state, {payload}) => {\n        state.categories.push(payload.data);\n        state.addCategory = null;\n        state.isSuccess = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(createCategory.rejected, (state, {payload}) => {\n        state.isError = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(updateCategory.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(updateCategory.fulfilled, (state, {payload}) => {\n        const index = state.categories.findIndex((x) => x.id === payload.data.id);\n        state.categories = state.categories.filter((x) => x.id !== payload.data.id);;\n        state.categories.splice(index, 0, payload.data);\n        state.editCategory = null;\n        state.isSuccess = true;\n        state.isError = false;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(updateCategory.rejected, (state, {payload}) => {\n        // state.editCategory = null;\n        state.isError = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(deleteCategory.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(deleteCategory.fulfilled, (state, {payload}) => {\n        state.categories = state.categories.map((x) => x.id !== payload.data.id);;\n        state.deleteCat = null;\n        state.isSuccess = true;\n        state.isError = false;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(deleteCategory.rejected, (state, {payload}) => {\n        // state.editCategory = null;\n        state.isError = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n  },\n});\n\nexport const { \n  reset, \n  resetSuccessAndError, \n  setEditCategory,\n  setAddCategory,\n  setDeleteCategory,\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}