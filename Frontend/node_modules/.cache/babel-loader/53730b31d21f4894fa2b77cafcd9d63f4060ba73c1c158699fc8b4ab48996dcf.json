{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n\n// import Navbar from \"../../components/Navbar\";\n// import Heading from \"../../components/Heading\";\n// import CategoryList from '../../components/CategoryList';\n// import Footer from \"../../components/Footer\";\n// import Loading from \"../../components/Loading\";\n\n// import \"../../App.css\";\n// import SubHeading from '../../components/SubHeading';\n// import categoryService from '../../services/categoryService';\n// import SuccessToast from \"../../components/SuccessToast\";\n// import ErrorToast from \"../../components/ErrorToast\";\n// import AddEditCategoryModal from \"../../components/AddEditCategoryModal\";\n// import DeleteCategoryModal from \"../../components/DeleteCategoryModal\";\n\n// //Importing Dummy Data\n// // const data = require(\"../../dummy-data.json\");\n// // let blogPosts = data.blogPosts;\n// // const categories = data.categories;\n\n// export default function CategoriesPage() {\n//   const [categories, setCategories] = useState();\n//   const [addCategory, setAddCategory ] = useState();\n//   const [editCategory, setEditCategory] = useState();\n//   const [deleteCategory, setDeleteCategory] = useState();\n\n//   const [loading, setLoading] = useState();\n//   const [message, setMessage] = useState();\n//   const [isSuccess, setIsSuccess] = useState();\n//   const [isError, setIsError] = useState();\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         setLoading(true)\n//         const res = await categoryService.fetchCategories();\n//         setCategories(res.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setIsError(true);\n//         setMessage(err);\n//         setLoading(false);\n//       }\n//     };\n//     fetchCategories();\n//   }, []);\n\n//   const onCategoryAdd = () => {\n//     setAddCategory({\n//       title: \"\",\n//       description: \"\",\n//       color: \"#000000\",\n//     });\n//   };\n\n//   const onCategoryUpdate = (category) => {\n//     setEditCategory(category);\n//   };\n\n//   const onCategoryDelete = (category) => {\n//     setDeleteCategory(category);\n//   };\n\n//   const createCategory = async (category) => {\n//     try {\n//       const newCategory = await categoryService.createCategory(category);\n//       setIsSuccess(true);\n//       setMessage(newCategory.message);\n//       setCategories((prev) => {\n//         return [...prev, newCategory];\n//       });\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setAddCategory(null);\n//   };\n\n//   const updateCategory = async (category) => {\n//     try {\n//       const updatedCategory = await categoryService.updateCategory(category);\n//       setIsSuccess(true);\n//       setMessage(updatedCategory.message);\n//       setCategories((prev) => {\n//         const index = prev.findIndex((x) => x.id === updatedCategory.data.id);\n//         prev[index] = updatedCategory.data;\n//         return prev;\n//       });\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setEditCategory(null);\n//   };\n\n//   const removeCategory = async (category) => {\n//     try {\n//       const newBlog = await categoryService.deleteCategory(category.id);\n//       setIsSuccess(true);\n//       setMessage(newBlog.message);\n//       setCategories((prev) => prev.filter((x) => x.id !== category.id));\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setDeleteCategory(null);\n//   };\n\n//   const AddButton = () => {\n//     return (\n//       <button className=\"btn btn-outline-dark h-75\" onClick={onCategoryAdd}>\n//         ADD CATEGORY\n//       </button>\n//     );\n//   };\n\n//   if (loading) {\n//     return <Loading />;\n//   }\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className=\"container\">\n//         <Heading />\n//         <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//           <p className=\"page-subtitle\">Categories</p>\n//           <AddButton />\n//         </div>\n//         <CategoryList\n//           categories={categories}\n//           onEdit={onCategoryUpdate}\n//           onDelete={onCategoryDelete}\n//         ></CategoryList>\n//       </div>\n//       <Footer />\n//       <AddEditCategoryModal\n//         addCategory={addCategory}\n//         editCategory={editCategory}\n//         createCategory={createCategory}\n//         updateCategory={updateCategory}\n//         onClose={() => {\n//           setAddCategory(null);\n//           setEditCategory(null);\n//         }}\n//       />\n//       <DeleteCategoryModal\n//         deleteCategory={deleteCategory}\n//         removeCategory={removeCategory}\n//         onClose={() => setDeleteCategory(null)}\n//       />\n//       <SuccessToast\n//         show={isSuccess}\n//         message={message}\n//         onClose={() => {\n//           setIsSuccess(false);\n//           setMessage(\"\");\n//         }}\n//       />\n//       <ErrorToast\n//         show={isError}\n//         message={message}\n//         onClose={() => {\n//           setIsError(false);\n//           setMessage(\"\");\n//         }}\n//       />\n//     </>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/pages/Categories/index.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n\n// import Navbar from \"../../components/Navbar\";\n// import Heading from \"../../components/Heading\";\n// import CategoryList from '../../components/CategoryList';\n// import Footer from \"../../components/Footer\";\n// import Loading from \"../../components/Loading\";\n\n// import \"../../App.css\";\n// import SubHeading from '../../components/SubHeading';\n// import categoryService from '../../services/categoryService';\n// import SuccessToast from \"../../components/SuccessToast\";\n// import ErrorToast from \"../../components/ErrorToast\";\n// import AddEditCategoryModal from \"../../components/AddEditCategoryModal\";\n// import DeleteCategoryModal from \"../../components/DeleteCategoryModal\";\n\n// //Importing Dummy Data\n// // const data = require(\"../../dummy-data.json\");\n// // let blogPosts = data.blogPosts;\n// // const categories = data.categories;\n\n// export default function CategoriesPage() {\n//   const [categories, setCategories] = useState();\n//   const [addCategory, setAddCategory ] = useState();\n//   const [editCategory, setEditCategory] = useState();\n//   const [deleteCategory, setDeleteCategory] = useState();\n\n//   const [loading, setLoading] = useState();\n//   const [message, setMessage] = useState();\n//   const [isSuccess, setIsSuccess] = useState();\n//   const [isError, setIsError] = useState();\n\n\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         setLoading(true)\n//         const res = await categoryService.fetchCategories();\n//         setCategories(res.data);\n//         setLoading(false);\n//       } catch (err) {\n//         setIsError(true);\n//         setMessage(err);\n//         setLoading(false);\n//       }\n//     };\n//     fetchCategories();\n//   }, []);\n\n//   const onCategoryAdd = () => {\n//     setAddCategory({\n//       title: \"\",\n//       description: \"\",\n//       color: \"#000000\",\n//     });\n//   };\n\n//   const onCategoryUpdate = (category) => {\n//     setEditCategory(category);\n//   };\n\n//   const onCategoryDelete = (category) => {\n//     setDeleteCategory(category);\n//   };\n\n//   const createCategory = async (category) => {\n//     try {\n//       const newCategory = await categoryService.createCategory(category);\n//       setIsSuccess(true);\n//       setMessage(newCategory.message);\n//       setCategories((prev) => {\n//         return [...prev, newCategory];\n//       });\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setAddCategory(null);\n//   };\n\n//   const updateCategory = async (category) => {\n//     try {\n//       const updatedCategory = await categoryService.updateCategory(category);\n//       setIsSuccess(true);\n//       setMessage(updatedCategory.message);\n//       setCategories((prev) => {\n//         const index = prev.findIndex((x) => x.id === updatedCategory.data.id);\n//         prev[index] = updatedCategory.data;\n//         return prev;\n//       });\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setEditCategory(null);\n//   };\n\n//   const removeCategory = async (category) => {\n//     try {\n//       const newBlog = await categoryService.deleteCategory(category.id);\n//       setIsSuccess(true);\n//       setMessage(newBlog.message);\n//       setCategories((prev) => prev.filter((x) => x.id !== category.id));\n//     } catch (err) {\n//       setIsError(true);\n//       setMessage(err);\n//     }\n//     setDeleteCategory(null);\n//   };\n\n//   const AddButton = () => {\n//     return (\n//       <button className=\"btn btn-outline-dark h-75\" onClick={onCategoryAdd}>\n//         ADD CATEGORY\n//       </button>\n//     );\n//   };\n\n//   if (loading) {\n//     return <Loading />;\n//   }\n\n//   return (\n//     <>\n//       <Navbar />\n//       <div className=\"container\">\n//         <Heading />\n//         <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n//           <p className=\"page-subtitle\">Categories</p>\n//           <AddButton />\n//         </div>\n//         <CategoryList\n//           categories={categories}\n//           onEdit={onCategoryUpdate}\n//           onDelete={onCategoryDelete}\n//         ></CategoryList>\n//       </div>\n//       <Footer />\n//       <AddEditCategoryModal\n//         addCategory={addCategory}\n//         editCategory={editCategory}\n//         createCategory={createCategory}\n//         updateCategory={updateCategory}\n//         onClose={() => {\n//           setAddCategory(null);\n//           setEditCategory(null);\n//         }}\n//       />\n//       <DeleteCategoryModal\n//         deleteCategory={deleteCategory}\n//         removeCategory={removeCategory}\n//         onClose={() => setDeleteCategory(null)}\n//       />\n//       <SuccessToast\n//         show={isSuccess}\n//         message={message}\n//         onClose={() => {\n//           setIsSuccess(false);\n//           setMessage(\"\");\n//         }}\n//       />\n//       <ErrorToast\n//         show={isError}\n//         message={message}\n//         onClose={() => {\n//           setIsError(false);\n//           setMessage(\"\");\n//         }}\n//       />\n//     </>\n//   );\n// }"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}