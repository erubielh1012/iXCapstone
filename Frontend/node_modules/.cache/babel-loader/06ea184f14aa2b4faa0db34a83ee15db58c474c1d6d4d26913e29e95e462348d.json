{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport categoryService from \"../services/categoryService\";\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCategory: null,\n  categories: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\"\n};\nexport const fetchCategories = createAsyncThunk(\"categories/fetchCategories\", async (_, thunkAPI) => {\n  try {\n    return await categoryService.fetchCategories();\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const updateCategory = createAsyncThunk(\"categories/updateCategory\", async (payload, thunkAPI) => {\n  try {\n    return await categoryService.updateCategory(payload);\n  } catch (error) {\n    const message = error.message || error;\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: state => initialState,\n    resetSuccessAndError: state => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(fetchCategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.categories = payload.data;\n      state.isSuccess = true;\n      state.isLoading = false;\n      state.message = payload.message;\n    }).addCase(fetchCategories.rejected, (state, {\n      payload\n    }) => {\n      state.message = payload;\n      state.isError = true;\n      state.isLoading = false;\n    }).addCase(updateCategory.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateCategory.fulfilled, (state, {\n      payload\n    }) => {\n      const index = state.categories.map(x => x.id === payload.data.id);\n      state.categories = state.categories.map(x => x.id !== payload.data.id);\n      ;\n      state.categories.splice(index, 0, payload.data);\n      state.editCategory = null;\n      state.isSuccess = true;\n      state.isError = false;\n      state.isLoading = false;\n    }).addCase(updateCategory.rejected, (state, {\n      payload\n    }) => {\n      state.categories = payload;\n      state.isSuccess = true;\n      state.isError = false;\n    });\n  }\n});\nexport const {\n  reset,\n  resetSuccessAndError\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","categoryService","initialState","addCategory","editCategory","deleteCategory","categories","isError","isSuccess","isLoading","message","fetchCategories","_","thunkAPI","error","rejectWithValue","updateCategory","payload","categoriesSlice","name","reducers","reset","state","resetSuccessAndError","extraReducers","builder","addCase","pending","fulfilled","data","rejected","index","map","x","id","splice","actions","reducer"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/features/categoriesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nimport categoryService from \"../services/categoryService\";\n\nconst initialState = {\n  addCategory: null,\n  editCategory: null,\n  deleteCategory: null,\n  categories: [],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: \"\",\n};\n\nexport const fetchCategories = createAsyncThunk(\n  \"categories/fetchCategories\",\n  async (_, thunkAPI) => {\n    try {\n      return await categoryService.fetchCategories();\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n);\n\nexport const updateCategory = createAsyncThunk(\n  \"categories/updateCategory\",\n  async(payload, thunkAPI) => {\n    try {\n      return await categoryService.updateCategory(payload);\n    } catch (error) {\n      const message = error.message || error;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n)\n\nexport const categoriesSlice = createSlice({\n  name: \"categories\",\n  initialState,\n  reducers: {\n    reset: (state) => initialState,\n    resetSuccessAndError: (state) => {\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = \"\";\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCategories.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(fetchCategories.fulfilled, (state, { payload }) => {\n        state.categories = payload.data;\n        state.isSuccess = true;\n        state.isLoading = false;\n        state.message = payload.message;\n      })\n      .addCase(fetchCategories.rejected, (state, { payload }) => {\n        state.message = payload;\n        state.isError = true;\n        state.isLoading = false;\n      })\n      .addCase(updateCategory.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(updateCategory.fulfilled, (state, {payload}) => {\n        const index = state.categories.map((x) => x.id === payload.data.id);\n        state.categories = state.categories.map((x) => x.id !== payload.data.id);;\n        state.categories.splice(index, 0, payload.data);\n        state.editCategory = null;\n        state.isSuccess = true;\n        state.isError = false;\n        state.isLoading = false;\n      })\n      .addCase(updateCategory.rejected, (state, {payload}) => {\n        state.categories = payload;\n        state.isSuccess = true;\n        state.isError = false;\n      })\n  },\n});\n\nexport const { reset, resetSuccessAndError } = categoriesSlice.actions;\nexport default categoriesSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}