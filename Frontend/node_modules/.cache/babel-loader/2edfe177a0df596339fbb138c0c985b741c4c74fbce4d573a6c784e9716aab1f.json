{"ast":null,"code":"const getBlogs = async () => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let blogsApiData = await data.json();\n    return blogsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogsByCategoryId = async categoryId => {\n  try {\n    const data = await fetch(\"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" + categoryId, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let res = await data.json();\n    return res.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst blogService = {\n  getBlogs,\n  blogsByCategoryId\n};\nexport default blogService;","map":{"version":3,"names":["getBlogs","data","fetch","method","headers","blogsApiData","json","error","Error","blogsByCategoryId","categoryId","res","blogService"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/BlogApp/Frontend/src/services/blogService.js"],"sourcesContent":["const getBlogs = async () => {\n    try {\n      const data = await fetch(\n        \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs\",\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        \n      let blogsApiData = await data.json();\n      return blogsApiData.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\nconst blogsByCategoryId = async (categoryId) => {\n  try {\n    const data = await fetch(\n      \"https://ix-blog-app-2d5c689132cd.herokuapp.com/api/blogs/\" + categoryId,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n    let res = await data.json();\n    return res.data;\n  } catch(error) {\n    throw new Error(error);\n  }\n}\n  \n  const blogService = {\n    getBlogs, blogsByCategoryId\n  };\n  \n  export default blogService;"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;EACzB,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CACtB,0DAA0D,EAC1D;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEJ,IAAIC,YAAY,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOD,YAAY,CAACJ,IAAI;EAC1B,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAEH,MAAME,iBAAiB,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACF,MAAMT,IAAI,GAAG,MAAMC,KAAK,CACtB,2DAA2D,GAAGQ,UAAU,EACxE;MACEP,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEJ,IAAIO,GAAG,GAAG,MAAMV,IAAI,CAACK,IAAI,CAAC,CAAC;IAC3B,OAAOK,GAAG,CAACV,IAAI;EACjB,CAAC,CAAC,OAAMM,KAAK,EAAE;IACb,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAEC,MAAMK,WAAW,GAAG;EAClBZ,QAAQ;EAAES;AACZ,CAAC;AAED,eAAeG,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}