{"ast":null,"code":"const createBlog = async blog => {\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: blog\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || console.log(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong!\");\n      throw error.message;\n    }\n  }\n  ;\n  const responseData = await response.json();\n  return responseData;\n};\nconst fetchBlogs = async () => {\n  console.log(\"Trying to grab all Blogs\");\n  const response = await fetch(\"http://localhost:8000/api/blogs\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || console.log(res);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData.data;\n};\nconst fetchBlogById = async id => {\n  const data = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!data.ok) {\n    try {\n      let blogsApiData = await data.json();\n      throw blogsApiData.message || console.log(blogsApiData);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const blogsApiData = await data.json();\n  return blogsApiData.data;\n};\nconst fetchBlogsByCategoryId = async categoryId => {\n  console.log(\"Trying to grab filtered blogs by cats ID\");\n  console.log(\"http://localhost:8000/api/blogs/category/\" + categoryId);\n  const data = await fetch(\"http://localhost:8000/api/blogs/category/\" + categoryId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!data.ok) {\n    try {\n      let res = await data.json();\n      throw res.message || console.log(res);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const blogsApiData = await data.json();\n  return blogsApiData.data;\n};\nconst fetchBlogsByAuthorId = async authorId => {\n  console.log(\"Trying to grab filtered blogs by author's ID\");\n  const data = await fetch(\"http://localhost:8000/api/blogs/author/\" + authorId, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!data.ok) {\n    try {\n      let res = await data.json();\n      throw res.message || console.log(res);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n  const responseData = await data.json();\n  return responseData;\n};\nconst updateBlogById = async blog => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + blog.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    },\n    body: JSON.stringify(blog)\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst deleteBlogById = async id => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token\n    }\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\nconst blogService = {\n  createBlog,\n  fetchBlogs,\n  fetchBlogById,\n  fetchBlogsByCategoryId,\n  fetchBlogsByAuthorId,\n  updateBlogById,\n  deleteBlogById\n};\nexport default blogService;","map":{"version":3,"names":["createBlog","blog","response","fetch","method","headers","Authorization","JSON","parse","localStorage","getItem","token","body","ok","res","json","message","console","log","err","error","Error","responseData","fetchBlogs","blogsApiData","data","fetchBlogById","id","fetchBlogsByCategoryId","categoryId","fetchBlogsByAuthorId","authorId","updateBlogById","stringify","deleteBlogById","blogService"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/services/blogService.js"],"sourcesContent":["\nconst createBlog = async (blog) => {\n  const response = await fetch(\n    \"http://localhost:8000/api/blogs\", \n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n      },\n      body: blog,\n    });\n\n    if (!response.ok) {\n      try {\n        let res = await response.json();\n        throw res.message || console.log(res);\n      } catch (err) {\n        console.log(err);\n        const error = new Error(\"Something went wrong!\");\n        throw error.message;\n      }\n    };\n\n    const responseData = await response.json();\n    return responseData;\n};\n\nconst fetchBlogs = async () => {\n  console.log(\"Trying to grab all Blogs\")\n  const response = await fetch(\n    \"http://localhost:8000/api/blogs\",\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n  if (!response.ok) {\n    try {    \n      let res = await response.json();\n      throw res.message || console.log(res);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\")\n      throw new Error(error);\n    }\n  }\n\n  const blogsApiData = await response.json();\n  return blogsApiData.data;\n};\n\nconst fetchBlogById = async (id) => {\n  const data = await fetch(\n    \"http://localhost:8000/api/blogs/\" + id,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n  if (!data.ok) {\n    try {\n      let blogsApiData = await data.json();\n      throw blogsApiData.message || console.log(blogsApiData);\n    } catch (err) {\n      const error = new Error(\"Something went wrong\")\n      throw new Error(error);\n    }\n  }\n  \n  const blogsApiData = await data.json();\n  return blogsApiData.data;\n}\n\nconst fetchBlogsByCategoryId = async ( categoryId ) => {\n  console.log(\"Trying to grab filtered blogs by cats ID\")\n\n  console.log(\"http://localhost:8000/api/blogs/category/\" + categoryId);\n\n  const data = await fetch(\n    \"http://localhost:8000/api/blogs/category/\" + categoryId,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n\n    if (!data.ok) {\n      try {\n        let res = await data.json();\n        throw res.message || console.log(res);\n      } catch(err) {\n        const error = new Error(\"Something went wrong\");\n        throw new Error(error);\n      }\n    }\n    const blogsApiData = await data.json();\n    return blogsApiData.data;\n};\n\nconst fetchBlogsByAuthorId = async ( authorId ) => {\n  console.log(\"Trying to grab filtered blogs by author's ID\")\n\n  const data = await fetch(\n    (\"http://localhost:8000/api/blogs/author/\" + authorId),\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n  if (!data.ok) {\n    try {\n      let res = await data.json();\n      throw res.message || console.log(res);\n    } catch(err) {\n      const error = new Error(\"Something went wrong\");\n      throw new Error(error);\n    }\n  }\n\n  const responseData = await data.json();\n  return responseData;\n}\n\n\nconst updateBlogById = async (blog) => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + blog.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n    },\n    body: JSON.stringify(blog),\n  });\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\n\nconst deleteBlogById = async (id) => {\n  const response = await fetch(\"http://localhost:8000/api/blogs/\" + id, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n    },\n  });\n\n  if (!response.ok) {\n    try {\n      let res = await response.json();\n      throw res.message || JSON.stringify(res);\n    } catch (err) {\n      console.log(err);\n      const error = new Error(\"Something went wrong\");\n      throw error.message;\n    }\n  }\n\n  const blogsApiData = await response.json();\n  return blogsApiData;\n};\n\nconst blogService = {\n  createBlog,\n  fetchBlogs, \n  fetchBlogById,\n  fetchBlogsByCategoryId,\n  fetchBlogsByAuthorId,\n  updateBlogById,\n  deleteBlogById,\n};\n  \n  export default blogService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}