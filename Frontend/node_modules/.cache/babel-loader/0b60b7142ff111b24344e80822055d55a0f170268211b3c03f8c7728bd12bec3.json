{"ast":null,"code":"const register=async userData=>{const response=await fetch(\"http://localhost:8000/api/auth/register\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});if(!response.ok){try{let res=await response.json();throw res;}catch(err){const error=new Error(\"Something went wrong\");throw new Error(error);}}const responseData=await response.json();localStorage.setItem(\"user\",JSON.stringify(responseData.data));return responseData;};const login=async userData=>{const response=await fetch(\"http://localhost:8000/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(userData)});if(!response.ok){let res=await response.json();throw res;}const responseData=await response.json();localStorage.setItem(\"user\",JSON.stringify(responseData.data));return responseData;};const getAuthorInfo=async id=>{const data=await fetch(\"http://localhost:8000/api/auth/\"+id,{method:\"GET\",headers:{\"Content-Type\":\"application/json\"}});if(!data.ok){try{let authorData=await data.json();throw authorData.message;}catch(err){const error=new Error(\"Something went wrong\");throw new Error(error);}}const authorData=await data.json();return authorData;};const updateUser=async user=>{const response=await fetch(\"http://localhost:8000/api/auth/user/\".concat(user.get(\"id\")),{method:\"PUT\",headers:{// \"Content-Type\": \"application/json\",\nAuthorization:\"Bearer \"+JSON.parse(localStorage.getItem(\"user\")).token},body:user});if(!response.ok){let res=await response.json();throw res;}const responseData=await response.json();return responseData;};const authService={getAuthorInfo,register,login,updateUser};export default authService;","map":{"version":3,"names":["register","userData","response","fetch","method","headers","body","JSON","stringify","ok","res","json","err","error","Error","responseData","localStorage","setItem","data","login","getAuthorInfo","id","authorData","message","updateUser","user","concat","get","Authorization","parse","getItem","token","authService"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/CapstoneBlogApp/BlogApp/Frontend/src/services/authService.js"],"sourcesContent":["const register = async (userData) => {\n  const response = await fetch(\n    \"http://localhost:8000/api/auth/register\",{\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userData),\n    });\n\n    if (!response.ok) {\n      try {\n        let res = await response.json();\n        throw res;\n      } catch (err) {\n        const error = new Error(\"Something went wrong\");\n        throw new Error(error);\n      }\n    }\n\n    const responseData = await response.json();\n    localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n    return responseData;\n};\n\nconst login = async (userData) => {\n  const response = await fetch(\"http://localhost:8000/api/auth/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  localStorage.setItem(\"user\", JSON.stringify(responseData.data));\n  return responseData;\n}\n\nconst getAuthorInfo = async (id) => {\n    const data = await fetch(\n        \"http://localhost:8000/api/auth/\" + id,\n        {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n    \n      if (!data.ok) {\n        try {\n          let authorData = await data.json();\n          throw authorData.message;\n        } catch (err) {\n          const error = new Error(\"Something went wrong\")\n          throw new Error(error);\n        }\n      }\n      \n      const authorData = await data.json();\n      return authorData;\n};\n\nconst updateUser = async (user) => {\n  const response = await fetch(\n    `http://localhost:8000/api/auth/user/${user.get(\"id\")}`,\n    {\n      method: \"PUT\",\n      headers: {\n        // \"Content-Type\": \"application/json\",\n        Authorization:\n          \"Bearer \" + JSON.parse(localStorage.getItem(\"user\")).token,\n      },\n      body: user\n    }\n  );\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst authService = {\n  getAuthorInfo,\n  register,\n  login,\n  updateUser,\n};\n\nexport default authService;"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,yCAAyC,CAAC,CACxCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAC/B,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,GAAI,CACF,GAAI,CAAAC,GAAG,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC/B,KAAM,CAAAD,GAAG,CACX,CAAE,MAAOE,GAAG,CAAE,CACZ,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAC/C,KAAM,IAAI,CAAAA,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAEA,KAAM,CAAAE,YAAY,CAAG,KAAM,CAAAb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC1CK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEV,IAAI,CAACC,SAAS,CAACO,YAAY,CAACG,IAAI,CAAC,CAAC,CAC/D,MAAO,CAAAH,YAAY,CACvB,CAAC,CAED,KAAM,CAAAI,KAAK,CAAG,KAAO,CAAAlB,QAAQ,EAAK,CAChC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sCAAsC,CAAE,CACnEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAC/B,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,GAAI,CAAAC,GAAG,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC/B,KAAM,CAAAD,GAAG,CACX,CAEA,KAAM,CAAAK,YAAY,CAAG,KAAM,CAAAb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC1CK,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEV,IAAI,CAACC,SAAS,CAACO,YAAY,CAACG,IAAI,CAAC,CAAC,CAC/D,MAAO,CAAAH,YAAY,CACrB,CAAC,CAED,KAAM,CAAAK,aAAa,CAAG,KAAO,CAAAC,EAAE,EAAK,CAChC,KAAM,CAAAH,IAAI,CAAG,KAAM,CAAAf,KAAK,CACpB,iCAAiC,CAAGkB,EAAE,CACtC,CACEjB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEJ,GAAI,CAACa,IAAI,CAACT,EAAE,CAAE,CACZ,GAAI,CACF,GAAI,CAAAa,UAAU,CAAG,KAAM,CAAAJ,IAAI,CAACP,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAW,UAAU,CAACC,OAAO,CAC1B,CAAE,MAAOX,GAAG,CAAE,CACZ,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CAC/C,KAAM,IAAI,CAAAA,KAAK,CAACD,KAAK,CAAC,CACxB,CACF,CAEA,KAAM,CAAAS,UAAU,CAAG,KAAM,CAAAJ,IAAI,CAACP,IAAI,CAAC,CAAC,CACpC,MAAO,CAAAW,UAAU,CACvB,CAAC,CAED,KAAM,CAAAE,UAAU,CAAG,KAAO,CAAAC,IAAI,EAAK,CACjC,KAAM,CAAAvB,QAAQ,CAAG,KAAM,CAAAC,KAAK,wCAAAuB,MAAA,CACaD,IAAI,CAACE,GAAG,CAAC,IAAI,CAAC,EACrD,CACEvB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP;AACAuB,aAAa,CACX,SAAS,CAAGrB,IAAI,CAACsB,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC,CAAC,CAACC,KACzD,CAAC,CACDzB,IAAI,CAAEmB,IACR,CACF,CAAC,CAED,GAAI,CAACvB,QAAQ,CAACO,EAAE,CAAE,CAChB,GAAI,CAAAC,GAAG,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC/B,KAAM,CAAAD,GAAG,CACX,CAEA,KAAM,CAAAK,YAAY,CAAG,KAAM,CAAAb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC1C,MAAO,CAAAI,YAAY,CACrB,CAAC,CAED,KAAM,CAAAiB,WAAW,CAAG,CAClBZ,aAAa,CACbpB,QAAQ,CACRmB,KAAK,CACLK,UACF,CAAC,CAED,cAAe,CAAAQ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}