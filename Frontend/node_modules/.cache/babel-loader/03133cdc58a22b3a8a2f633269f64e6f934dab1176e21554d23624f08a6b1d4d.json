{"ast":null,"code":"const createCategory = async category => {\n  console.log(\"You are creating a new category!\");\n  const response = await fetch(\"http://localhost:8000/api/categories\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: category\n  });\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n  const responseData = await response.json();\n  return responseData;\n};\nconst fetchCategories = async () => {\n  console.log(\"Trying to grab all categories\");\n  try {\n    const data = await fetch(\"http://localhost:8000/api/categories\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let catsApiData = await data.json();\n    console.log(catsApiData.message);\n    return catsApiData.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst updateCategory = async category => {\n  try {\n    console.log(\"Updating a category!\");\n    const data = await fetch(\"http://localhost:8000/api/categories/\" + category.get(\"id\"), {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: category\n    });\n    let res = await data.json();\n    console.log(res.message);\n    return res.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst deleteCategoryById = async id => {\n  try {\n    const data = await fetch(\"http://localhost:8000/api/categories/\" + id, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    let res = await data.json();\n    console.log(res.message);\n    return res.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst categoryService = {\n  createCategory,\n  fetchCategories,\n  updateCategory,\n  deleteCategoryById\n};\nexport default categoryService;","map":{"version":3,"names":["createCategory","category","console","log","response","fetch","method","headers","body","ok","res","json","responseData","fetchCategories","data","catsApiData","message","error","Error","updateCategory","get","deleteCategoryById","id","categoryService"],"sources":["/Users/erucuh/Downloads/Coding4Fun/IX/BlogApp/Frontend/src/services/categoryService.js"],"sourcesContent":["const createCategory = async (category) => {\n  console.log(\"You are creating a new category!\")\n  const response = await fetch(\n    \"http://localhost:8000/api/categories\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: category\n    });\n\n  if (!response.ok) {\n    let res = await response.json();\n    throw res;\n  }\n\n  const responseData = await response.json();\n  return responseData;\n};\n\nconst fetchCategories = async () => {\n    console.log(\"Trying to grab all categories\")\n    try {\n        const data = await fetch(\n          \"http://localhost:8000/api/categories\",\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          });\n\n        let catsApiData = await data.json();\n        console.log(catsApiData.message);\n        return catsApiData.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    }\n\n  const updateCategory = async (category) => {\n    try {\n      console.log(\"Updating a category!\");\n      const data = await fetch(\n        \"http://localhost:8000/api/categories/\" + category.get(\"id\"),\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: category\n        });\n\n      let res = await data.json();\n      console.log(res.message);\n      return res.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n\n  const deleteCategoryById = async (id) => {\n    try {\n      const data = await fetch(\n        \"http://localhost:8000/api/categories/\" + id,\n        {\n          method: \"DELETE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n      let res = await data.json();\n      console.log(res.message);\n      return res.data;\n    } catch (error) {\n      throw new Error(error);\n    }\n  };\n  \n  const categoryService = {\n    createCategory,\n    fetchCategories,\n    updateCategory,\n    deleteCategoryById,\n  };\n\n  export default categoryService;\n\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzCC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sCAAsC,EACtC;IACEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEP;EACR,CAAC,CAAC;EAEJ,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;IAChB,IAAIC,GAAG,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC/B,MAAMD,GAAG;EACX;EAEA,MAAME,YAAY,GAAG,MAAMR,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1C,OAAOC,YAAY;AACrB,CAAC;AAED,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EAChCX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC5C,IAAI;IACA,MAAMW,IAAI,GAAG,MAAMT,KAAK,CACtB,sCAAsC,EACtC;MACEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEJ,IAAIQ,WAAW,GAAG,MAAMD,IAAI,CAACH,IAAI,CAAC,CAAC;IACnCT,OAAO,CAACC,GAAG,CAACY,WAAW,CAACC,OAAO,CAAC;IAChC,OAAOD,WAAW,CAACD,IAAI;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAEH,MAAME,cAAc,GAAG,MAAOlB,QAAQ,IAAK;EACzC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,MAAMW,IAAI,GAAG,MAAMT,KAAK,CACtB,uCAAuC,GAAGJ,QAAQ,CAACmB,GAAG,CAAC,IAAI,CAAC,EAC5D;MACEd,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEP;IACR,CAAC,CAAC;IAEJ,IAAIS,GAAG,GAAG,MAAMI,IAAI,CAACH,IAAI,CAAC,CAAC;IAC3BT,OAAO,CAACC,GAAG,CAACO,GAAG,CAACM,OAAO,CAAC;IACxB,OAAON,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,MAAMI,kBAAkB,GAAG,MAAOC,EAAE,IAAK;EACvC,IAAI;IACF,MAAMR,IAAI,GAAG,MAAMT,KAAK,CACtB,uCAAuC,GAAGiB,EAAE,EAC5C;MACEhB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEJ,IAAIG,GAAG,GAAG,MAAMI,IAAI,CAACH,IAAI,CAAC,CAAC;IAC3BT,OAAO,CAACC,GAAG,CAACO,GAAG,CAACM,OAAO,CAAC;IACxB,OAAON,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;EACxB;AACF,CAAC;AAED,MAAMM,eAAe,GAAG;EACtBvB,cAAc;EACda,eAAe;EACfM,cAAc;EACdE;AACF,CAAC;AAED,eAAeE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}